{
  "openapi": "3.0.0",
  "info": {
    "title": "Nutri-AI API",
    "version": "1.0.0",
    "description": "Documentação da API. Esta API permite o gerenciamento de usuários, perfis, macronutrientes, preferências e dietas personalizadas. Utilize os endpoints para registrar, logar, atualizar e deletar informações do usuário, bem como criar e gerenciar perfis e dietas personalizadas.\n\n## Instruções\n\n1. **Registrar Usuário**: Utilize o endpoint `/auth/register` para criar um novo usuário.\n2. **Logar Usuário**: Utilize o endpoint `/auth/login` para autenticar o usuário e obter um token JWT.\n3. **Gerenciar Perfil**: Utilize os endpoints `/api/profile/me` para criar, atualizar e deletar o perfil do usuário.\n4. **Gerenciar Macronutrientes**: Utilize os endpoints `/api/macro` para criar, obter e deletar os macronutrientes do usuário.\n5. **Gerenciar Preferências do Usuário**: Utilize os endpoints `/api/user-preference` para criar, obter, atualizar e deletar as preferências do usuário.\n6. **Gerenciar Dieta Personalizada**: Utilize os endpoints `/api/diet` para criar, obter e deletar a dieta personalizada do usuário."
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "servers": [
    {
      "url": "http://localhost:8000"
    }
  ],
  "paths": {
    "/auth/register": {
      "post": {
        "summary": "Registrar novo usuário",
        "tags": ["Auth"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": { "type": "string", "example": "Username" },
                  "email": {
                    "type": "string",
                    "example": "username@teste.com"
                  },
                  "password": { "type": "string", "example": "password123" }
                },
                "required": ["name", "email", "password"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Usuário criado com sucesso"
          },
          "400": {
            "description": "Erro na requisição"
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "summary": "Logar o usuário",
        "tags": ["Auth"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "example": "username@teste.com"
                  },
                  "password": { "type": "string", "example": "password123" }
                },
                "required": ["email", "password"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Usuário logado com sucesso"
          },
          "400": {
            "description": "Erro na requisição"
          }
        }
      }
    },
    "/api/user/me": {
      "get": {
        "summary": "Retorna os dados do usuário",
        "tags": ["User"],
        "description": "Utilize o token JWT obtido no login para acessar este endpoint. Clique no cadeado e insira o token no campo 'Value'.",
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": {
            "description": "Dados do usuário retornado com sucesso"
          },
          "401": {
            "description": "token inválido ou expirado"
          },
          "404": {
            "description": "Usuário não encontrado"
          }
        }
      },
      "put": {
        "summary": "Atualiza a senha do usuário",
        "tags": ["User"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "oldPassword": { "type": "string", "example": "password123" },
                  "newPassword": { "type": "string", "example": "123password" }
                },
                "required": ["oldPassword", "newPassword"]
              }
            }
          }
        },
        "description": "Utilize o token JWT obtido no login para acessar este endpoint. Clique no cadeado e insira o token no campo 'Value'. Insira a senha antiga e a nova senha no corpo da requisição.",
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": {
            "description": "Senha do usuário atualizado com sucesso"
          },
          "401": {
            "description": "token inválido ou expirado"
          },
          "404": {
            "description": "Usuário não encontrado"
          }
        }
      },
      "delete": {
        "summary": "Deleta o usuário",
        "tags": ["User"],
        "description": "Utilize o token JWT obtido no login para acessar este endpoint. Clique no cadeado e insira o token no campo 'Value'.",
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": {
            "description": "Usuário deletado com sucesso"
          },
          "401": {
            "description": "token inválido ou expirado"
          },
          "404": {
            "description": "Usuário não encontrado"
          }
        }
      }
    },
    "/api/user/account": {
      "delete": {
        "summary": "Deleta a conta do usuário",
        "tags": ["User"],
        "description": "Utilize o token JWT obtido no login para acessar este endpoint. Clique no cadeado e insira o token no campo 'Value'.",
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": {
            "description": "Conta do usuário deletada com sucesso"
          },
          "401": {
            "description": "token inválido ou expirado"
          },
          "404": {
            "description": "Usuário não encontrado"
          }
        }
      }
    },
    "/api/profile/me": {
      "post": {
        "summary": "Cria o perfil do usuário",
        "tags": ["Profile"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "age": { "type": "number", "example": 20 },
                  "gender": {
                    "type": "string",
                    "enum": ["Masculino", "Feminino"]
                  },
                  "height": { "type": "number", "example": 175 },
                  "weight": { "type": "number", "example": 70 },
                  "activityLevel": {
                    "type": "string",
                    "enum": [
                      "Sedentario",
                      "PoucoAtivo",
                      "ModeradamenteAtivo",
                      "MuitoAtivo",
                      "ExtremamenteAtivo"
                    ]
                  },
                  "objective": {
                    "type": "string",
                    "enum": ["PerderPeso", "GanharMusculo", "ManterPeso"]
                  },
                  "activityFrequency": {
                    "type": "number",
                    "enum": [
                      "Nunca",
                      "UmaADuasVezesPorSemana",
                      "TresAQuatroVezesPorSemana",
                      "CincoOuMaisVezesPorSemana"
                    ]
                  }
                },
                "required": [
                  "age",
                  "gender",
                  "height",
                  "weight",
                  "activityLevel",
                  "objective",
                  "activityFrequency"
                ]
              }
            }
          }
        },
        "description": "Insira os dados do perfil no corpo da requisição. Somente é possível adicionar uma vez por usuário. Utilize o token JWT obtido no login para acessar este endpoint. Clique no cadeado e insira o token no campo 'Value'.",
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "201": {
            "description": "Perfil do usuário criado com sucesso"
          },
          "401": {
            "description": "token inválido ou expirado"
          },
          "404": {
            "description": "Perfil não encontrado"
          }
        }
      },
      "get": {
        "summary": "Retorna o perfil do usuário",
        "tags": ["Profile"],
        "description": "Utilize o token JWT obtido no login para acessar este endpoint. Clique no cadeado e insira o token no campo 'Value'.",
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": {
            "description": "Perfil do usuário retornado com sucesso"
          },
          "401": {
            "description": "token inválido ou expirado"
          },
          "404": {
            "description": "Perfil não encontrado"
          }
        }
      },
      "put": {
        "summary": "Atualiza o perfil do usuário",
        "tags": ["Profile"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "age": { "type": "number", "example": 20 },
                  "gender": {
                    "type": "string",
                    "enum": ["Masculino", "Feminino"]
                  },
                  "height": { "type": "number", "example": 180 },
                  "weight": { "type": "number", "example": 75 },
                  "activityLevel": {
                    "type": "string",
                    "enum": [
                      "Sedentario",
                      "PoucoAtivo",
                      "ModeradamenteAtivo",
                      "MuitoAtivo",
                      "ExtremamenteAtivo"
                    ]
                  },
                  "objective": {
                    "type": "string",
                    "enum": ["PerderPeso", "GanharMusculo", "ManterPeso"]
                  },
                  "activityFrequency": {
                    "type": "number",
                    "enum": [
                      "Nunca",
                      "UmaADuasVezesPorSemana",
                      "TresAQuatroVezesPorSemana",
                      "CincoOuMaisVezesPorSemana"
                    ]
                  }
                },
                "required": [
                  "age",
                  "gender",
                  "height",
                  "weight",
                  "activityLevel",
                  "objective",
                  "activityFrequency"
                ]
              }
            }
          }
        },
        "description": "Insira os novos dados do perfil que deseja alterar no corpo da requisição. Utilize o token JWT obtido no login para acessar este endpoint. Clique no cadeado e insira o token no campo 'Value'.",
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": {
            "description": "Perfil do usuário atualizado com sucesso"
          },
          "401": {
            "description": "token inválido ou expirado"
          },
          "404": {
            "description": "Perfil não encontrado"
          }
        }
      },
      "delete": {
        "summary": "Deleta o perfil do usuário",
        "tags": ["Profile"],
        "description": "Utilize o token JWT obtido no login para acessar este endpoint. Clique no cadeado e insira o token no campo 'Value'.",
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": {
            "description": "Perfil do usuário deletado com sucesso"
          },
          "401": {
            "description": "token inválido ou expirado"
          },
          "404": {
            "description": "Perfil não encontrado"
          }
        }
      }
    },
    "/api/macro": {
      "post": {
        "summary": "Cria os macronutrientes do usuário",
        "tags": ["Macro"],
        "description": "Utilize o token JWT obtido no login para acessar este endpoint. Clique no cadeado e insira o token no campo 'Value'.",
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "201": {
            "description": "Macronutrientes do usuário criados com sucesso"
          },
          "401": {
            "description": "token inválido ou expirado"
          },
          "400": {
            "description": "Erro na requisição"
          },
          "404": {
            "description": "Perfil não encontrado"
          }
        }
      },
      "get": {
        "summary": "Retorna os macronutrientes do usuário",
        "tags": ["Macro"],
        "description": "Utilize o token JWT obtido no login para acessar este endpoint. Clique no cadeado e insira o token no campo 'Value'.",
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": {
            "description": "Macronutrientes do usuário retornados com sucesso"
          },
          "401": {
            "description": "token inválido ou expirado"
          },
          "404": {
            "description": "Perfil não encontrado"
          }
        }
      },
      "delete": {
        "summary": "Deleta os macronutrientes do usuário",
        "tags": ["Macro"],
        "description": "Utilize o token JWT obtido no login para acessar este endpoint. Clique no cadeado e insira o token no campo 'Value'.",
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": {
            "description": "Macronutrientes do usuário deletados com sucesso"
          },
          "401": {
            "description": "token inválido ou expirado"
          },
          "404": {
            "description": "Perfil não encontrado"
          }
        }
      }
    },
    "/api/preference": {
      "post": {
        "summary": "Cria as preferências do usuário",
        "tags": ["User Preference"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userWantsSuplements": {
                    "type": "string",
                    "enum": ["sim", "nao"]
                  },
                  "userAlreadyUses": {
                    "type": "string",
                    "example": "Creatina, Whey"
                  },
                  "sheduleTrainingStart": {
                    "type": "string",
                    "example": "8:00"
                  },
                  "sheduleTrainingEnd": { "type": "string", "example": "9:00" },
                  "dietType": {
                    "type": "string",
                    "enum": ["Normal", "Vegetariana", "Cetogenica", "Vegana"]
                  },
                  "foodRestrictions": {
                    "type": "string",
                    "example": "Lactose, Glúten"
                  },
                  "customSuggestionFood": {
                    "type": "string",
                    "example": "Frutas, Verduras"
                  }
                },
                "required": [
                  "userWantsSuplements",
                  "userAlreadyUses",
                  "sheduleTrainingStart",
                  "sheduleTrainingEnd",
                  "dietType",
                  "foodRestrictions",
                  "customSuggestionFood"
                ]
              }
            }
          }
        },
        "description": "Insira as preferências do usuário no corpo da requisição. Utilize o token JWT obtido no login para acessar este endpoint. Clique no cadeado e insira o token no campo 'Value'.",
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "201": {
            "description": "Preferências do usuário criadas com sucesso"
          },
          "401": {
            "description": "token inválido ou expirado"
          },
          "404": {
            "description": "Usuário não encontrado"
          }
        }
      },
      "get": {
        "summary": "Retorna as preferências do usuário",
        "tags": ["User Preference"],
        "description": "Utilize o token JWT obtido no login para acessar este endpoint. Clique no cadeado e insira o token no campo 'Value'.",
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": {
            "description": "Preferências do usuário retornadas com sucesso"
          },
          "401": {
            "description": "token inválido ou expirado"
          },
          "404": {
            "description": "Usuário não encontrado"
          }
        }
      },
      "put": {
        "summary": "Atualiza as preferências do usuário",
        "tags": ["User Preference"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userWantsSuplements": {
                    "type": "string",
                    "enum": ["sim", "nao"]
                  },
                  "userAlreadyUses": {
                    "type": "string",
                    "example": "Creatina, Whey, BCAA"
                  },
                  "sheduleTrainingStart": {
                    "type": "string",
                    "example": "8:00"
                  },
                  "sheduleTrainingEnd": { "type": "string", "example": "9:00" },
                  "dietType": {
                    "type": "string",
                    "enum": ["Normal", "Vegetariana", "Cetogenica", "Vegana"]
                  },
                  "foodRestrictions": {
                    "type": "string",
                    "example": "Glúten"
                  },
                  "customSuggestionFood": {
                    "type": "string",
                    "example": "Frutas"
                  }
                },
                "required": [
                  "userWantsSuplements",
                  "userAlreadyUses",
                  "sheduleTrainingStart",
                  "sheduleTrainingEnd",
                  "dietType",
                  "foodRestrictions",
                  "customSuggestionFood"
                ]
              }
            }
          }
        },
        "description": "Insira os novos dados das preferências do usuário no corpo da requisição. Utilize o token JWT obtido no login para acessar este endpoint. Clique no cadeado e insira o token no campo 'Value'.",
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": {
            "description": "Preferências do usuário atualizadas com sucesso"
          },
          "401": {
            "description": "token inválido ou expirado"
          },
          "404": {
            "description": "Usuário não encontrado"
          }
        }
      },
      "delete": {
        "summary": "Deleta as preferências do usuário",
        "tags": ["User Preference"],
        "description": "Utilize o token JWT obtido no login para acessar este endpoint. Clique no cadeado e insira o token no campo 'Value'.",
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": {
            "description": "Preferências do usuário deletadas com sucesso"
          },
          "401": {
            "description": "token inválido ou expirado"
          },
          "404": {
            "description": "Usuário não encontrado"
          }
        }
      }
    },
    "/api/diet": {
      "post": {
        "summary": "Cria a dieta personalizada do usuário",
        "tags": ["Diet"],
        "description": "Utilize o token JWT obtido no login para acessar este endpoint. Clique no cadeado e insira o token no campo 'Value'.",
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "201": {
            "description": "Dieta do usuário criada com sucesso"
          },
          "401": {
            "description": "token inválido ou expirado"
          },
          "400": {
            "description": "Erro na requisição"
          },
          "404": {
            "description": "Dieta não encontrada"
          }
        }
      },
      "get": {
        "summary": "Retorna a dieta personalizada do usuário",
        "tags": ["Diet"],
        "description": "Utilize o token JWT obtido no login para acessar este endpoint. Clique no cadeado e insira o token no campo 'Value'.",
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": {
            "description": "Dieta do usuário retornada com sucesso"
          },
          "401": {
            "description": "token inválido ou expirado"
          },
          "404": {
            "description": "Dieta não encontrada"
          }
        }
      },
      "delete": {
        "summary": "Deleta a dieta personalizada do usuário",
        "tags": ["Diet"],
        "description": "Utilize o token JWT obtido no login para acessar este endpoint. Clique no cadeado e insira o token no campo 'Value'.",
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": {
            "description": "Dieta do usuário deletada com sucesso"
          },
          "401": {
            "description": "token inválido ou expirado"
          },
          "404": {
            "description": "Dieta não encontrada"
          }
        }
      }
    }
  }
}
